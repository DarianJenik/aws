#DIJ

import boto3
from botocore.client import BaseClient

# session is picked up from the ~/.aws/credentials file

# Uncomment for TR session generated by cloud-tool
boto3.setup_default_session(profile_name='cloud-tool-default')
session = boto3.session.Session(profile_name='cloud-tool-default')

# s3_client = session.client('s3') # is the non-explicit version.
s3_client: BaseClient = session.client('s3')

print("\nHere is a list of the S3 buckets:\n")

s3 = boto3.resource('s3')

no_perm_counter = 0
public_perm_counter = 0
s3_counter = 0

for bucket in s3.buckets.all():
    s3_counter += 1

    acl = bucket.Acl()
    try:
        for grant in acl.grants:
            if grant['Grantee']['Type'].lower() == 'group' \
                    and grant['Grantee']['URI'] == 'http://acs.amazonaws.com/groups/global/AllUsers':
                print(bucket.name)
                public_perm_counter += 1

                print("\tGrant assigned to ALL users!")

                grant_permission = grant['Permission'].lower()

                if grant_permission == 'read':
                    print('\tRead - Public Access: List Objects')

                elif grant_permission == 'write':
                    print('\tWrite - Public Access: Write Objects')

                elif grant_permission == 'read_acp':
                    print('\tWrite - Public Access: Read Bucket Permissions')

                elif grant_permission == 'write_acp':
                    print('\tWrite - Public Access: Write Bucket Permissions')

                elif grant_permission == 'full_control':
                    print('\tPublic Access: Full Control')
    except:
        no_perm_counter += 1
        print(bucket.name)
        print('\tNO PERMISSIONS TO READ ACL!')

print('Number of s3 buckets:')
print(s3_counter)
print('Number of public S3 buckets:')
print(public_perm_counter)
print('Number of buckets that the script didn\'t have permission to read:')
print(no_perm_counter)
